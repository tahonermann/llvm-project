// RUN: %clang_cc1 -fsycl-is-host -emit-llvm -triple x86_64 %s -o - | FileCheck %s

// Test IR generated by __builtin_sycl_kernel_name(). This builtin accepts a SYCL
// kernel name type and returns it's mangled name.

class kernel_name_1;
class kernel_name_2;
typedef kernel_name_2 kernel_name_TD;
class kernel_name_3;
class kernel_name_4;
typedef kernel_name_4 kernel_name_TD2;

template<typename KN>
struct kernel_id_t {
  using type = KN;
};

struct kernel_id_nt {
  using type = kernel_name_3;
};

template <typename name, typename Func>
__attribute__((sycl_kernel_entry_point(name))) void kernel_single_task(const Func kernelFunc) {
  kernelFunc();
}

struct SYCLKernel {
  int m;
  public:
  void operator()() const {}
};

void test() {
  SYCLKernel Obj;
  kernel_single_task<kernel_name_1>(Obj);
  kernel_single_task<kernel_name_TD>(Obj);
  kernel_single_task<kernel_name_3>(Obj);
  kernel_single_task<kernel_name_TD2>(Obj);
  const char* test1 = __builtin_sycl_kernel_name(kernel_id_t<kernel_name_1>());
  const char* test2 = __builtin_sycl_kernel_name(kernel_id_t<kernel_name_TD>());
  const char* test3 = __builtin_sycl_kernel_name(kernel_id_nt());
  const char* test4 = __builtin_sycl_kernel_name(kernel_id_t<kernel_name_4>());
}

// Kernel names retrieved from KernelInfo map
// CHECK: @0 = private unnamed_addr constant [44 x i8] c"_Z20__sycl_kernel_callerI13kernel_name_1Evv\00", align 1
// CHECK: @1 = private unnamed_addr constant [44 x i8] c"_Z20__sycl_kernel_callerI13kernel_name_2Evv\00", align 1
// CHECK: @2 = private unnamed_addr constant [44 x i8] c"_Z20__sycl_kernel_callerI13kernel_name_3Evv\00", align 1
// CHECK: @3 = private unnamed_addr constant [44 x i8] c"_Z20__sycl_kernel_callerI13kernel_name_4Evv\00", align 1

// CHECK: define dso_local void @_Z4testv()
// CHECK: %test1 = alloca ptr, align 8
// CHECK: %test2 = alloca ptr, align 8
// CHECK: %test3 = alloca ptr, align 8
// CHECK: %test4 = alloca ptr, align 8
// CHECK: store ptr @0, ptr %test1, align 8
// CHECK: store ptr @1, ptr %test2, align 8
// CHECK: store ptr @2, ptr %test3, align 8
// CHECK: store ptr @3, ptr %test4, align 8

